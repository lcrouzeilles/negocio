package negocio;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Random;
import java.util.Set;

import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Maquina.java
//  @ Date : 22/5/2018
//  @ Author : 
//
//




public class Maquina {
	public Maquina(int recaudacion, int recaudacionMinima, int casilleros, int precioJugada, int id) {
		this.recaudacion = recaudacion;
		this.recaudacionMinima = recaudacionMinima;
		this.casilleros = casilleros;
		this.precioJugada = precioJugada;
		this.id = id;
		combinacion = new ArrayList<String>();		
		premios = new HashSet<Premio>();		
	}

	
	private int id;
	private int recaudacion;
	private int recaudacionMinima;
	private int casilleros;
	private int precioJugada;
	private Jugador jugador;
	private Set<Premio> premios;
	private ArrayList<String> combinacion;
	
	public void quitarPremio(Premio p) {
		premios.remove(p);
	}
	public void agregarPremio (Premio p) {
		premios.add(p);
	}
	
	public Premio buscarPremio(ArrayList<String> combinacion) {
		for(Premio p: premios) {
			if(p.soy(combinacion))
				return p;
		}
		return null;
	}
	
	public void quitarJugador() {
		jugador = null;
	}
	
	public int esPremio(ArrayList<String> combinacion) { //si es premio devuelve el valor del premio(positivo), sino, devuelve 0 (negativo)
		int flag = 0;
		for(Premio p : premios) {//si la maquina tiene el premio, asigno el valor al flag (devuelve 0 si no lo tiene)
			if(p.soy(combinacion)) 
				flag = p.getValor();
		}
		return flag;
	}
	
	public void setCreditoJugador(int credito) {
		jugador.setCredito(credito);
	}
	
	public void restarValorPremio(int valorPremio) {
		this.recaudacion = this.recaudacion - valorPremio;
	}
	
	public ArrayList<String> getCombinacion() {
		return combinacion;
	}

	public void incrementarRecaudacion(int precioJugada) {
		this.recaudacion = this.recaudacion + precioJugada;
	}
	
	public boolean verificarRecaudacion() {
		return recaudacion < recaudacionMinima;	
	}
	
	public void notificarJugador() {
		if(verificarRecaudacion() == true) 
			JOptionPane.showMessageDialog(null, "Hay chances de no pagar el proximo premio");	
	}

	public int getCasilleros() {
		return casilleros;
	}	
	
	public void setCasilleros(int casilleros) {
		this.casilleros = casilleros;
	}
	
	public int getRecaudacion() {
		return recaudacion;	
	}	
	
	public int getPrecioJugada() {
		return precioJugada;
	}	
	
	public int getRecaudacionMinima() {
		return recaudacionMinima;
	}
	
	public void setRecaudacionMinima(int recaudacionMinima) {
		this.recaudacionMinima = recaudacionMinima;
		}

	public Set<Premio> getPremios() {
		return premios;
	}	
	public void setRecaudacion(int recaudacion) {
		this.recaudacion = recaudacion;
	}
	public void setPrecioJugada(int precioJugada) {
		this.precioJugada = precioJugada;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Jugador getJugador() {
		return jugador;
	}

	public void setJugador(Jugador jugador) {
		this.jugador = jugador;
	}
	
}